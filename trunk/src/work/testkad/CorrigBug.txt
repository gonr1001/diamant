
4,10,15,18 20 Delete, Added 26,27  modif: 5 add ROP317101 , 8 remove GRH221151 ,19 add STT563101


    /**
        * 
        * @param currentRsc
        * @param newRsc
        * @return
        */
       private void makeDiff(DSetOfResources newSites, DSetOfResources currentSites){
           //find deleted element
           System.err.println("...........MAKEDIFF.......................... ");
        
           findDeletedElements(newSites,currentSites);

           //    find added element
           
           findAddedElements(newSites,currentSites);
//        find changed  and unchanged element
   
           findChangesInElements(newSites,currentSites);
       
           System.err.println("..................................... ");
       }

       /**
        * 
        * @param newSites
        * @param currentSites
        */
       private void findDeletedElements(DSetOfResources newSites,DSetOfResources currentSites) {
           // find a site
         
               int siteSize = getSiteSize(currentSites);
               for (int i = 0; i < siteSize; i++) {
                   String rscSite = getSite(currentSites, i);
                   DSetOfResources rescSite = getRscSite(currentSites, i);
                   int catSize = getCategorySize(rescSite);
                   // find category in site
                   for (int j = 0; j < catSize; j++) {
                       String rscCat = getCategory(rescSite, j);
                       DSetOfResources rescCat = getRscCategory(rescSite, j);
                       // find resource in a category
                       for (int k = 0; k < rescCat.size(); k++) {
                           // current ressource
                            DResource curResc = rescCat.getResourceAt(k);
                           if (getResource(newSites, curResc,rscSite, rscCat) == null) {
                               DValue error = new DValue();
                               error.setStringValue(DConst.DELETED_ELEMENT
                                       + curResc.getID());
                               _dm.getSetOfImportSelErrors().addResource(
                                       new DResource("1", error), 0);
                               System.err.println("DELETED_ELEMENT "+ curResc.getID());
                              // _deletedElements.addResource(curResc, 1);
                               rescCat.removeResource(curResc.getID());
                           }// end if(newRsc.getResource(currentRsc.getResourceAt(i).getID())!=null)
                       }// end for k++
                   }// end for  j++
               }// end for  i++
           
       } 

       
       /**
        * 
        * @param newSites
        * @param currentSites
        */
       private void findAddedElements(DSetOfResources newSites,
               DSetOfResources currentSites) {
           // find a site
      
               int newSize = getSiteSize(newSites);
               for (int i = 0; i < newSize; i++) {
                   String rscSite = getSite(newSites, i);
                   DSetOfResources rescSite = getRscSite(newSites, i);
                   int catSize = getCategorySize(rescSite);
                   // find category in site
                   for (int j = 0; j < catSize; j++) {
                       String rscCat = getCategory(rescSite, j);
                       DSetOfResources rescCat = getRscCategory(rescSite, j);
                       // find resource in a category
                       for (int k = 0; k < rescCat.size(); k++) {
//                       current ressource
                           DResource newRes = rescCat.getResourceAt(k);
                           if (getResource(currentSites, newRes ,
                                   rscSite, rscCat) == null) {
                               DValue error = new DValue();
                               error.setStringValue(DConst.ADDED_ELEMENT
                                       + newRes.getID());
                               _dm.getSetOfImportSelErrors().addResource(
                                       new DResource("2", error), 0);
                               System.err.println("ADDED_ELEMENT "+ newRes.getID());
                             //  _addedElements.addResource(newRes, 1);
                              rescCat.addResource(newRes,1);
                           }// end if(newRsc.getResource(currentRsc.getResourceAt(i).getID())!=null)
                       }// end for k++
                   }// end for j++
               }// end for i++
          
       }
       /**
        * 
        * @param newSites
        * @param currentSites
        */
       private void findChangesInElements(DSetOfResources newSites,
               DSetOfResources currentSites) {
           // find a site
     
               int siteSize = getSiteSize(currentSites);
               for (int i = 0; i < siteSize; i++) {
                   String rscSite = getSite(currentSites, i);
                   DSetOfResources rescSite = getRscSite(currentSites, i);
                   int catSize = getCategorySize(rescSite);
                   // find category in site
                   for (int j = 0; j < catSize; j++) {
                       String rscCat = getCategory(rescSite, j);
                       DSetOfResources rescCat = getRscCategory(rescSite, j);
                       // find resource in a category
                       for (int k = 0; k < rescCat.size(); k++) {
                           DResource resc = rescCat.getResourceAt(k);
                           DResource newRes=getResource(newSites,resc ,rscSite, rscCat);
                           if (newRes!= null) {
                               // Already exist does it change ?
                               boolean changed=false;
                               if (currentSites instanceof SetOfStuSites) {
                                  changed=compareStudents(newRes,resc);
                               }else if (currentSites instanceof SetOfInstructors) {
                                   changed=compareInstructors(resc,newRes);
                               } 
                               DValue error = new DValue();
                               if (changed == true) {
                                   error.setStringValue(DConst.CHANGED_ELEMENT + newRes.getID());
                                   _dm.getSetOfImportSelErrors().addResource(
                                           new DResource("3", error), 0);
                                  // _changedElements.addResource(newRes, 1);
                                  rescCat.removeResource(resc.getID());
                                  rescCat.addResource(newRes,1);
                                   System.err.println("CHANGED_ELEMENT "+ newRes.getID());
                               } else {
                                   error.setStringValue(DConst.UNCHANGED_ELEMENT + newRes.getID());
                                   _dm.getSetOfImportSelErrors().addResource(
                                           new DResource("4", error), 0);
                                   System.err.println("UNCHANGED_ELEMENT "+ newRes.getID());
                                 //  _unChangedElements.addResource(newRes, 1);
                               }
                           }// end if !=null
                       }// end for k++
                   }// end for j++
               }// end for i++

       }

 /**
     * 
     * @param source
     * @param target
     * @return
     */
    private DResource getResource(DSetOfResources source, DResource target, String site, String cat){
        //String str= source.getClass().getName();
        //TODO make getResource for each site to search the resource
        if(source instanceof dInternal.dData.dInstructors.SetOfInstructors ){
            return source.getResource(target.getID());
        }
        DResource rescSite = source.getResource(site);
        if(source instanceof SetOfSites ){
            if(rescSite != null){
                DResource rescCat = ((DSetOfResources)rescSite.getAttach()).getResource(cat);
                if(rescCat!=null)
                    return ((DSetOfResources)rescCat.getAttach()).getResource(target.getID());
            }
        }
        if(source instanceof SetOfActivitiesSites ){
            if (rescSite != null)
                return ((DSetOfResources)rescSite.getAttach()).getResource(target.getID());
        }
        if(source instanceof SetOfStuSites ){
            if (rescSite != null)
                return ((DSetOfResources)rescSite.getAttach()).getResource(target.getKey());
        }
        
        return null;
    }
